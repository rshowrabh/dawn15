{%- style -%}
.section-{{ section.id }}-padding {
padding-top: calc({{ section.settings.padding_top }}px * 0.75);
padding-bottom: calc({{ section.settings.padding_bottom }}px * 0.75);
}

@media screen and (min-width: 750px) {
.section-{{ section.id }}-padding {
padding-top: {{ section.settings.padding_top }}px;
padding-bottom: {{ section.settings.padding_bottom }}px;
}
}
{%- endstyle -%}
<style>
    /* Basic reset */
    * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
    }

    body {
        font-family: Arial, sans-serif;
    }

    /* Slider container */
    .slider {
        position: relative;
        max-width: 1200px;
        margin: 40px auto;
        overflow: hidden;
        border: 2px solid #ddd;
        border-radius: 10px;
    }

    /* Slides */
    .slides {
        display: flex;
        transition: transform 0.5s ease-in-out;
    }

    .slide {
        min-width: 100%;
        transition: opacity 1s ease;
    }

    .slide img {
        width: 100%;
        display: block;
        border-bottom: 2px solid #ddd;
    }

    /* Navigation arrows */
    .arrow {
        position: absolute;
        top: 50%;
        transform: translateY(-50%);
        background-color: rgba(0, 0, 0, 0.5);
        color: red;
        border: none;
        padding: 10px;
        cursor: pointer;
    }

    .arrow.left {
        left: 10px;
    }

    .arrow.right {
        right: 10px;
    }

    /* Dots navigation */
    .dots {
        text-align: center;
        padding: 10px 0;
        position: absolute;
        bottom: 0;
        left: 50%;
        transform: translate(-50%, -50%);
        cursor: pointer;
    }

    .dot {
        display: inline-block;
        width: 10px;
        height: 10px;
        margin: 0 5px;
        background-color: #bbb;
        border-radius: 50%;
        cursor: pointer;
    }

    .dot.active {
        background-color: #717171;
    }
</style>
<div id="new-slider" class="color-{{ section.settings.color_scheme }} gradient isolate">
    <div class="section-{{ section.id }}-padding page-width">
        <div class="slider">
            <div class="slides">
                {% for block in section.settings.blocks %}
                    <div class="slide">
                    {% if block.settings.image != blank %}
                        <img src="{{ block.settings.image | image_url }}" alt="">
                      {% else %}
                        <img src="{{'banner.jpg '| asset_url}}" alt="">
                      {% endif %}                  
                   </div>
                {% endfor %}
            </div>
            <button class="arrow left">
                <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24">
                    <path d="M15.293 3.293 6.586 12l8.707 8.707 1.414-1.414L9.414 12l7.293-7.293-1.414-1.414z"
                        fill="currentColor" />
                </svg>
            </button>
            <button class="arrow right">
                <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24">
                    <path d="M7.293 4.707 14.586 12l-7.293 7.293 1.414 1.414L17.414 12 8.707 3.293 7.293 4.707z"
                        fill="currentColor" />
                </svg>
            </button>
        </div>
        <div class="dots">
        </div>

    </div>
</div>
<script>
    // Initial Dots
    var count = document.querySelector(".slides").childElementCount;
    console.log(count);
    for (var i = 0; i < count; i++) {
        document.querySelector(".dots").innerHTML += `<span class="dot"></span>`;

    }
    // JavaScript for slider functionality
    const slides = document.querySelector('.slides');
    const slide = document.querySelectorAll('.slide');
    const dots = document.querySelectorAll('.dot');
    const leftArrow = document.querySelector('.arrow.left');
    const rightArrow = document.querySelector('.arrow.right');

    let currentIndex = 0;

    // Function to update slider position
    function updateSlider() {
        slides.style.transform = `translateX(-${currentIndex * 100}%)`;
        dots.forEach((dot, index) => {
            dot.classList.toggle('active', index === currentIndex);
        });

    }

    // Function to show next slide
    function showNextSlide() {
        currentIndex = (currentIndex + 1) % slide.length;
        updateSlider();
    }

    // Function to show previous slide
    function showPrevSlide() {
        currentIndex = (currentIndex - 1 + slide.length) % slide.length;
        updateSlider();
    }

    // Event listeners for arrows
    rightArrow.addEventListener('click', showNextSlide);
    leftArrow.addEventListener('click', showPrevSlide);

    // Event listeners for dots
    dots.forEach((dot, index) => {
        dot.addEventListener('click', () => {
            currentIndex = index;
            updateSlider();
        });
    });

    // Auto slide functionality
    setInterval(showNextSlide, 3000);
</script>
{% schema %}
{
"name": "New Slider",
"tag": "section",
"class": "section",
"settings": [
{
"type": "color_scheme",
"id": "color_scheme",
"label": "t:sections.all.colors.label",
"default": "scheme-1"
},
{
"type": "header",
"content": "t:sections.all.padding.section_padding_heading"
},
{
"type": "range",
"id": "padding_top",
"min": 0,
"max": 100,
"step": 4,
"unit": "px",
"label": "t:sections.all.padding.padding_top",
"default": 40
},
{
"type": "range",
"id": "padding_bottom",
"min": 0,
"max": 100,
"step": 4,
"unit": "px",
"label": "t:sections.all.padding.padding_bottom",
"default": 52
}
],
"blocks": [
    {
    "type": "slide",
    "name": "Add Slide",
    "settings": [
          {
          "type": "image_picker",
          "id": "image",
          "label": "t:sections.multicolumn.blocks.column.settings.image.label"
          },
          {
          "type": "text",
          "id": "collection_name",
          "label": "Collection Name",
          "default" : "Starting at $31.2"
          },
          {
          "type": "text",
          "id": "heading",
          "label": "Collection Name",
          "default": "Summer Collection"
          },
          {
          "type": "text",
          "id": "button_label",
          "label": "Button Name",
          "default": "Explore More"
          },
          {
          "type": "url",
          "id": "button_link",
          "label": "Button Link"
          }
  ]
 }
],
"presets": [
{
"name": "New Slider"
}
]
}
{% endschema %}